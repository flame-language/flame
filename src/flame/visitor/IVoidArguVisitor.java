/* Generated by JTB 1.4.7 */
package flame.visitor;

import flame.syntaxtree.*;

public interface IVoidArguVisitor<A> {

  public void visit(final NodeChoice n, final A argu);

  public void visit(final NodeList n, final A argu);

  public void visit(final NodeListOptional n, final A argu);

  public void visit(final NodeOptional n, final A argu);

  public void visit(final NodeSequence n, final A argu);

  public void visit(final NodeTCF n, final A argu);

  public void visit(final NodeToken n, final A argu);

  public void visit(final Start n, final A argu);

  public void visit(final Require n, final A argu);

  public void visit(final MathExpression n, final A argu);

  public void visit(final AdditiveExpression n, final A argu);

  public void visit(final MultiplicativeExpression n, final A argu);

  public void visit(final UnaryExpression n, final A argu);

  public void visit(final RelationalExprssion n, final A argu);

  public void visit(final RelationalEqualityExpression n, final A argu);

  public void visit(final RelationalGreaterExpression n, final A argu);

  public void visit(final RelationalLessExpression n, final A argu);

  public void visit(final UnaryRelational n, final A argu);

  public void visit(final IfExpression n, final A argu);

  public void visit(final WhileExpression n, final A argu);

  public void visit(final VariableDeclaration n, final A argu);

  public void visit(final VariableAssign n, final A argu);

  public void visit(final VariableName n, final A argu);

  public void visit(final JavaStaticMethods n, final A argu);

  public void visit(final StatementExpression n, final A argu);

}
